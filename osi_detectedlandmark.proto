syntax = "proto2";

option optimize_for = SPEED;

import "osi_common.proto";
import "osi_landmark.proto";
import "osi_detectedobject.proto";

package osi3;

//
// \brief A traffic sign in the environment as detected by the sensor.
//
message DetectedTrafficSign
{
    // Common information of one detected item.
    //
    optional DetectedItemHeader header = 1;

    // The main sign as detected by the sensor.
    //
    optional EstimatedMainSign main_sign = 2;

    // A list of additional supplementary sign(s) as detected by the sensor.
    //
    // \note OSI uses singular instead of plural for repeated field names.
    //
    repeated EstimatedSupplementarySign supplementary_sign = 3;

    //
    // \brief Candidates for a detected sign as estimated by the sensor.
    //
    message EstimatedMainSign
    {
        // A list of candidates for this traffic sign as estimated by the
        // sensor.
        //
        // \note OSI uses singular instead of plural for repeated field names.
        //
        repeated CandidateMainSign candidate = 1;

        // The root mean squared error of the base parameters of the detected
        // traffic sign. \c TrafficSign::MainSign::base has to be identical for
        // all \c #candidate traffic signs.
        //
        optional BaseStationary base_rmse = 2;

        // The detected geometry of the traffic sign.
        //
        optional Geometry geometry = 3;

        //
        // \brief A candidate for a detected traffic sign as estimated by the
        // sensor.
        //
        message CandidateMainSign
        {
            // Common information of one detected item candidate.
            //
            optional DetectedCandidateItemHeader header = 1;

            // The definition of one main sign that defines this candidate.
            //
            // \note IDs, which are referenced in this message, usually
            // reference to \c DetectedXXX::tracking_id IDs.
            //
            optional TrafficSign.MainSign main_sign = 2;
        }

        // Definition of traffic sign geometries.
        //
        enum Geometry
        {
            // Geometry of the traffic sign is unknown (must not be used in
            // ground truth).
            //
            GEOMETRY_UNKNOWN = 0;

            // Geometry of the traffic sign is unspecified (but known).
            //
            GEOMETRY_OTHER = 1;

            // Traffic sign has a triangular geometry pointing to the top.
            //
            GEOMETRY_TRIANGLE_TOP = 2;

            //Traffic sign has a triangular geometry pointing down.
            //
            GEOMETRY_TRIANGLE_DOWN = 3;

            // Traffic sign has a circular geometry.
            //
            GEOMETRY_CIRCLE = 4;

            // Traffic sign has a square geometry.
            //
            GEOMETRY_SQUARE = 5;

            // Traffic sign has a diamond geometry.
            //
            GEOMETRY_DIAMOND = 6;

            // Traffic sign has an octagon geometry.
            //
            GEOMETRY_OCTAGON = 7;

            // Traffic sign has a geometry of an arrow pointing to the left.
            //
            GEOMETRY_ARROW_LEFT = 8;

            // Traffic sign has a geometry of an arrow pointing to the right.
            //
            GEOMETRY_ARROW_RIGHT = 9;

            // Traffic sign has a rectangle geometry. (width is bigger than
            // height e.g. one-way)
            //
            GEOMETRY_RECTANGLE = 10;

            // Traffic sign that has a pole geometry. (height is bigger than
            // width e.g. pole indicating highways exit in xx [m]).
            //
            GEOMETRY_POLE = 11;

            // Traffic sign that has an oversize rectangle geometry.
            // E.g. direction plates on highway or city signs.
            //
            GEOMETRY_PLATE = 12;
        }
    }

    //
    // \brief Candidates for all detected supplementary signs of one traffic
    // sign as estimated by the sensor.
    //
    message EstimatedSupplementarySign
    {
        // The definition of one of more supplementary signs that together
        // define this candidate.
        //
        // \note OSI uses singular instead of plural for repeated field names.
        //
        repeated CandidateSupplementarySign candidate = 1;

        // The root mean squared error of the base parameters of the detected
        // supplementary traffic sign. \c #candidate
        // \c TrafficSign::SupplementarySign::base has to be identical for all
        // \c #candidate supplementary traffic signs.
        //
        optional BaseStationary base_rmse = 2;

        // The estimated probability that this supplementary sign really
        // exists, not based on history.
        //
        // \note Use as confidence measure where a low value means less
        // confidence and a high value indicates strong confidence.
        //
        optional double existence_probability = 3;

        //
        // \brief A candidate for a detected supplementary sign as estimated by
        // the sensor.
        //
        message CandidateSupplementarySign
        {
            // Common information of one detected item candidate.
            //
            optional DetectedCandidateItemHeader header = 1;

            // The definition of one of more supplementary signs that together
            // define this candidate.
            //
            // \note IDs, which are referenced in this message, usually
            // reference to \c DetectedXXX::tracking_id IDs.
            //
            optional TrafficSign.SupplementarySign supplementary_sign = 2;
        }
    }
}

//
// \brief A traffic light in the environment as detected by the sensor.
//
message DetectedTrafficLight
{
    // Common information of one detected item.
    //
    optional DetectedItemHeader header = 1;

    // The main sign as detected by the sensor.
    //
    optional EstimatedTrafficLight traffic_light = 2;

    //
    // \brief Candidates for a detected traffic light as estimated by the
    // sensor.
    //
    message EstimatedTrafficLight
    {
        // A list of candidates for this traffic light as estimated by the
        // sensor.
        //
        // \note OSI uses singular instead of plural for repeated field names.
        //
        repeated CandidateTrafficLight candidate = 1;

        // The root mean squared error of the base parameters of the detected
        // traffic light's geometry. \c TrafficLight::base has to be identical
        // for all \c #candidate traffic lights.
        //
        optional BaseStationary base_rmse = 2;

        //
        // \brief A candidate for a detected traffic light as estimated by
        // the sensor.
        //
        message CandidateTrafficLight
        {
            // Common information of one detected item candidate.
            //
            optional DetectedCandidateItemHeader header = 1;

            // The definition of one traffic light that define this candidate.
            //
            // \note IDs, which are referenced in this message, usually
            // reference to \c DetectedXXX::tracking_id IDs.
            //
            optional TrafficLight traffic_light = 2;
        }
    }
}

//
// \brief A road marking in the environment as detected by the sensor.
//
message DetectedRoadMarking
{
    // Common information of one detected item.
    //
    optional DetectedItemHeader header = 1;

    // The road marking as detected by the sensor.
    //
    optional EstimatedRoadMarking road_marking = 2;

    //
    // \brief Candidates for a detected traffic light as estimated by the
    // sensor.
    //
    message EstimatedRoadMarking
    {
        // A list of candidates for this road marking as estimated by the
        // sensor.
        //
        // \note OSI uses singular instead of plural for repeated field names.
        //
        repeated CandidateRoadMarking candidate = 1;

        // The root mean squared error of the base parameters of the detected
        // road marking. \c RoadMarking::base has to be identical for
        // all \c #candidate road markings.
        //
        optional BaseStationary base_rmse = 2;

        //
        // \brief A candidate for a detected road marking as estimated by the
        // sensor.
        //
        message CandidateRoadMarking
        {
            // Common information of one detected item candidate.
            //
            optional DetectedCandidateItemHeader header = 1;

            // The description of the road marking.
            //
            // \note IDs, which are referenced in this message, usually
            // reference to \c DetectedXXX::tracking_id IDs.
            //
            optional RoadMarking road_marking = 2;
        }
    }
}