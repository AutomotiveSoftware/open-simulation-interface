syntax = "proto2";

option optimize_for = SPEED;

import "osi_lane.proto";
import "osi_detectedobject.proto";

package osi3;

//
// \brief A lane segment as detected by the sensor.
//
message DetectedLane
{
    // Common information of one detected item.
    //
    optional DetectedItemHeader header = 1;

    // A list of candidates for this lane as estimated by the sensor.
    //
    // \note OSI uses singular instead of plural for repeated field names.
    //
    repeated CandidateLane candidate = 2;

    //
    // \brief A candidate for a detected lane as estimated by the
    // sensor.
    //
    message CandidateLane
    {
        // The estimated probability that this candidate is the true value.
        // 
        // \note The sum of all \c #probability must be one. This probability is
        // given under the condition of
        // \c #DetectedItemHeader.existence_probability.
        //
        // Range: [0,1]
        //
        optional double probability = 1;

        // The definition of one lane that defines this candidate.
        //
        // \note IDs, which are referenced in this message, usually
        // reference to \c DetectedXXX::tracking_id IDs.
        //
        optional Lane lane = 2;
    }
}

//
// \brief A lane boundary segment as detected by the sensor.
//
message DetectedLaneBoundary
{
    // Common information of one detected item.
    //
    optional DetectedItemHeader header = 1;

    // A list of candidates for this lane boundary as estimated by the
    // sensor.
    //
    // \note OSI uses singular instead of plural for repeated field names.
    //
    repeated CandidateLaneBoundary candidate = 2;

    // The root mean squared error of the \c LaneBoundary.BoundaryPoint
    // information from a \c LaneBoundary.
    // For each \c #lane_boundary \c LaneBoundary::boundary_line point exact
    // one \c #boundary_line_rmse rmse information exist.
    //
    repeated LaneBoundary.BoundaryPoint boundary_line_rmse = 3;

    // Confidence of the segments of the \c LaneBoundary.BoundaryPoint
    // information from a \c LaneBoundary.
    // For each \c #lane_boundary \c LaneBoundary::boundary_line point exact
    // one \c #boundary_line_confidences confidence value is
    // specified.
    //
    repeated double boundary_line_confidences = 4;

    //
    // \brief A candidate for a detected lane boundary as estimated by the
    // sensor.
    //
    message CandidateLaneBoundary
    {
        // The estimated probability that this candidate is the true value.
        // 
        // \note The sum of all \c #probability must be one. This probability is
        // given under the condition of
        // \c #DetectedItemHeader.existence_probability.
        //
        // Range: [0,1]
        //
        optional double probability = 1;

        // The definition of one lane boundary that defines this candidate.
        //
        // \note IDs, which are referenced in this message, usually
        // reference to \c DetectedXXX::tracking_id IDs.
        //
        optional LaneBoundary lane_boundary = 2;
    }
}